name: Vote Aggregator service

on: 
  workflow_dispatch:
#   uncomment when ready
  push:
    branches:
      - main
    paths:
      - 'vote-aggregator/**'

env:
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_CURRENT_LOCATION_ID: ${{ secrets.REDIS_CURRENT_LOCATION_ID }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}

  # GH environment
  ESPv2_ARGS: ${{ vars.ESPv2_ARGS }}
  NODE_PORT: ${{ vars.NODE_PORT }}
  HUB_RPC_URL: ${{ secrets.HUB_RPC_URL }}
  HUB_ADDRESS: ${{ vars.HUB_ADDRESS }}
  HUB_CHAIN_NAME: ${{ vars.HUB_CHAIN_NAME }}
  NETWORK_PARAMS: ${{ secrets.NETWORK_PARAMS }}
  REDIS_EXPIRATION_TIME_IN_SEC: ${{ vars.REDIS_EXPIRATION_TIME_IN_SEC }}

jobs:
  deploy-image:
    strategy:
      fail-fast: true
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: vote-aggregator-dev
      
    name: Prepare metadata and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create data file
        run: |
          echo "$NETWORK_PARAMS" >> data.json
      - name: Setup metadata
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .github/files/gcp-metadata-vote-aggregator.yml
          output_file: gcp-metadata-vote-aggregator.yml
          strict: true
          data_file: data.json
          data_format: json

      # - name: Debug
      #   run: |
      #     cat gcp-metadata-vote-aggregator.yml

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }} # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }} # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Authenticate docker
        run: |
          gcloud auth configure-docker --quiet ${{ vars.GCP_REGION }}-docker.pkg.dev    

      - name: Build the image
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: vote-aggregator
          file: vote-aggregator/Dockerfile
          push: false
          tags: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/vote-aggregator"
          labels: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/vote-aggregator"
          cache-from: type=gha
          cache-to: type=gha,mode=max    
      - name: Build and push the image
        id: build-push-image
        uses: docker/build-push-action@v3
        with:
          context: vote-aggregator
          file: vote-aggregator/Dockerfile
          push: true
          tags: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/vote-aggregator"
          labels: "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/blockydevs/vote-aggregator"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          region: ${{ vars.GCP_REGION }}
          metadata: gcp-metadata-vote-aggregator.yml

      # - name: Show Output
      #   run: echo ${{ steps.deploy.outputs.url }}